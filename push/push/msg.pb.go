// Code generated by protoc-gen-go. DO NOT EDIT.
// source: msg.proto

package push

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type MsgReq struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title                string   `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Content              string   `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MsgReq) Reset()         { *m = MsgReq{} }
func (m *MsgReq) String() string { return proto.CompactTextString(m) }
func (*MsgReq) ProtoMessage()    {}
func (*MsgReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_c06e4cca6c2cc899, []int{0}
}

func (m *MsgReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MsgReq.Unmarshal(m, b)
}
func (m *MsgReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MsgReq.Marshal(b, m, deterministic)
}
func (m *MsgReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgReq.Merge(m, src)
}
func (m *MsgReq) XXX_Size() int {
	return xxx_messageInfo_MsgReq.Size(m)
}
func (m *MsgReq) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgReq.DiscardUnknown(m)
}

var xxx_messageInfo_MsgReq proto.InternalMessageInfo

func (m *MsgReq) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *MsgReq) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *MsgReq) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

type MsgRsp struct {
	Code                 int64    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg                  string   `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MsgRsp) Reset()         { *m = MsgRsp{} }
func (m *MsgRsp) String() string { return proto.CompactTextString(m) }
func (*MsgRsp) ProtoMessage()    {}
func (*MsgRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_c06e4cca6c2cc899, []int{1}
}

func (m *MsgRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MsgRsp.Unmarshal(m, b)
}
func (m *MsgRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MsgRsp.Marshal(b, m, deterministic)
}
func (m *MsgRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRsp.Merge(m, src)
}
func (m *MsgRsp) XXX_Size() int {
	return xxx_messageInfo_MsgRsp.Size(m)
}
func (m *MsgRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRsp.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRsp proto.InternalMessageInfo

func (m *MsgRsp) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *MsgRsp) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func init() {
	proto.RegisterType((*MsgReq)(nil), "push.MsgReq")
	proto.RegisterType((*MsgRsp)(nil), "push.MsgRsp")
}

func init() { proto.RegisterFile("msg.proto", fileDescriptor_c06e4cca6c2cc899) }

var fileDescriptor_c06e4cca6c2cc899 = []byte{
	// 166 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x8e, 0xcb, 0xaa, 0xc2, 0x30,
	0x14, 0x45, 0xe9, 0xe3, 0xf6, 0xd2, 0x83, 0x88, 0x1c, 0x1c, 0x04, 0x47, 0xa5, 0x13, 0x3b, 0x8a,
	0xa0, 0x3f, 0xe1, 0xc4, 0x49, 0x3e, 0x21, 0x0f, 0x62, 0xc0, 0x36, 0xb1, 0x27, 0xfd, 0x7f, 0x69,
	0x52, 0xc1, 0xd9, 0x5e, 0x7b, 0xb0, 0x58, 0xd0, 0x8e, 0x64, 0x79, 0x98, 0x7d, 0xf4, 0x58, 0x87,
	0x85, 0x9e, 0xfd, 0x1d, 0x9a, 0x07, 0x59, 0x61, 0xde, 0xb8, 0x87, 0xd2, 0x69, 0x56, 0x74, 0xc5,
	0x50, 0x89, 0xd2, 0x69, 0x3c, 0xc2, 0x5f, 0x74, 0xf1, 0x65, 0x58, 0xd9, 0x15, 0x43, 0x2b, 0x32,
	0x20, 0x83, 0x7f, 0xe5, 0xa7, 0x68, 0xa6, 0xc8, 0xaa, 0xf4, 0x7f, 0xb1, 0xe7, 0xd9, 0x44, 0x01,
	0x11, 0x6a, 0xe5, 0xb5, 0xd9, 0x5c, 0x69, 0xe3, 0x01, 0xaa, 0x91, 0xec, 0xe6, 0x5a, 0xe7, 0xf5,
	0x02, 0xa9, 0x00, 0xcf, 0xd0, 0xd2, 0x22, 0x49, 0xcd, 0x4e, 0x1a, 0xdc, 0xf1, 0xf5, 0xe3, 0x39,
	0xe9, 0xf4, 0x43, 0x14, 0x64, 0x93, 0xba, 0x6f, 0x9f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x45, 0xff,
	0xdf, 0x39, 0xc4, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PushClient is the client API for Push service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PushClient interface {
	Subscribe(ctx context.Context, in *MsgReq, opts ...grpc.CallOption) (*MsgRsp, error)
}

type pushClient struct {
	cc *grpc.ClientConn
}

func NewPushClient(cc *grpc.ClientConn) PushClient {
	return &pushClient{cc}
}

func (c *pushClient) Subscribe(ctx context.Context, in *MsgReq, opts ...grpc.CallOption) (*MsgRsp, error) {
	out := new(MsgRsp)
	err := c.cc.Invoke(ctx, "/push.push/subscribe", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PushServer is the server API for Push service.
type PushServer interface {
	Subscribe(context.Context, *MsgReq) (*MsgRsp, error)
}

// UnimplementedPushServer can be embedded to have forward compatible implementations.
type UnimplementedPushServer struct {
}

func (*UnimplementedPushServer) Subscribe(ctx context.Context, req *MsgReq) (*MsgRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Subscribe not implemented")
}

func RegisterPushServer(s *grpc.Server, srv PushServer) {
	s.RegisterService(&_Push_serviceDesc, srv)
}

func _Push_Subscribe_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PushServer).Subscribe(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/push.push/Subscribe",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PushServer).Subscribe(ctx, req.(*MsgReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Push_serviceDesc = grpc.ServiceDesc{
	ServiceName: "push.push",
	HandlerType: (*PushServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "subscribe",
			Handler:    _Push_Subscribe_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "msg.proto",
}
